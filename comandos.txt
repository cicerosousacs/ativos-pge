	TABLE MODEL ACQUISITION(aquisição)

	rails g model Acquisition item:string quantity:string value:float manager:string acquisition_date:date 
	contract_number:string company:string interested_party:string modality:string source:string warranty_period:integer warranty_ends:date
	
	  enum modality:{ 
			 CONCORRÊNCIA: 'CONCORRÊNCIA', 
			 PREGÃO: 'PREGÃO', 
			 LEILÃO: 'LEILÃO', 
			 CONCURSO: 'CONCURSO', 
			 "COTAÇÃO PREÇO": 'COTAÇÃO PREÇO', 
			 "DIÁLOGO COMPETITIVO": 'DIÁLOGO COMPETITIVO' 
			}
		  
	  enum source: { 
			MAPP: 'MAPP', 
			FUNPECE: 'FUNPECE', 
			"PGE FUNDO": 'PGE FUNDO'
			}

	TABLE MODEL ASSET(ativo)

	rails g model Asset type:string brand:string model:string serial:string tombo:string
	specification:text acquisition:references
	
	TABLE MODEL DEPOSIT
	
	rails g model Deposit ativo:references status:references observation:string
	
	TABLE MODEL USER(usuario)

	rails g model User name:string email:string

	TABLE MODEL AREA

	rails g model Area description:string

	TABLE MODEL SUBAREA

	rails g model Subarea area:references description:string

	TABLE MODEL BOND(vinculo)

	rails g model Bond subarea:references user:references observation:string
	
	TABLE MODEL ORDER SERVICE

	rails g model order_service bond:references number:integer(max 7 digitos) model: length: { is: 7 }

	TABLE MODEL LINKED ASSET

	rails g model linked_asset bond:references asset:references status:references observation:string
	
	TABLE MODEL STATUS

	rails g model Status description:string

		DISPONÍVEL
		DEFEITO
		INSERVÍVEL 
		AGUARDANDO GARANTIA
		VINCULADO
		VÍNCULADO EM USO 
	
	
	TABLE MODEL ADMIN
	
	rails g migration AddNameToAdmin name:string
	rails g migration AddActiveToAdmin active:boolean, na migration adicionar default:true
	rails g migration AddProfileToAdmin profile:integer
	
	TABLE MODEL BOND_HISTORY
	
	rails g model bond_history bond:references received:string removed:string
	#########################################

	CONTROLLER

	rails g controller ativo_pge::admins index
	rails g controller ativo_pge::ativos index
	rails g controller ativo_pge::acquisitions index
	rails g controller ativo_pge::users index
	rails g controller ativo_pge::areas index
	rails g controller ativo_pge::subareas index
	rails g controller ativo_pge::bonds index
	rails g controller ativo_pge::deposits index
	
	################################################
	
	PAGINAÇÂO VIEW
	rails g kaminari:views bootstrap4linked


	ENVIO DE EMAIL
	rails g mailer SendEmail



RETORNAM O MESMO VALOR DE CONTAGEM

  Ativo.where(type:'NOBREAK').count mais rapido
  Ativo.where(type:'NOBREAK').size

	CONTA A QUANTIDADE E AGRUPA
	Ativo.select(:type).group(:type).count
	
type_count = Ativo.select(:type).group(:type).count
type_count.keys
type_count.values

@type_count.each do |type|
	type
end


SELECT COUNT(type) AS type_count FROM public.ativos WHERE type = 'VOIP ';

                <%= "#{ativo.type} - #{ativo.type_count}" %>


@ativos.find(id = 3297).attach_ativo.status
Ativo.find(id = 3297).attach_ativo.status
 
@ativos_available = AttachAtivo.DISPONÍVEL.count
@ativos_linked = AttachAtivo.VÍNCULADO.count


SESSION LOGIN ########################

<%= render "admins/shared/links" %>

######################################

<% if devise_mapping.rememberable? %>
	<div class="field">
		<%= f.check_box :remember_me %>
		<%= f.label :remember_me %>
	</div>
<% end %>

ap b = Bond.where("id = '3'", "area = '8'")

Contagem de Ativos passando o id da Area
Bond.joins(:attach_ativo).where(area:'1').length

Bond.select(:area).group(:area)

descobrir o ativo a ser removido do vinculo:
ativo_move = params_bond[:attach_ativo_attributes]["1"][:ativo_id]

pesquisar vinculo:
AttachAtivo.joins(:ativo)

pesquisar vinculo, passando o id:
AttachAtivo.joins(:ativo).where(bond_id:'4').count

"https://mailtrap.io/inboxes/1711410/messages/2739803459"


# @assets_type = Ativo.select(:type).group(:type) # CRIA UM SELECT DOS TIPOS DE ATIVOS

.bg-success {
  background-color: #13855c !important;
}

select com todos os tipos de ativos:
        <%= select_tag 'ativo_type', options_from_collection_for_select(@type, "id", "type"), class:"form-control"%>


          <%= form_tag(ativo_pge_admins_path, method: :post) do %>
            <%= text_field_tag 'search', nil, class:"form-control border-1 small", placeholder:'Pesquisar...'%>
          <% end %>
          <div class="input-group-append">
            <%= button_tag type:'submit', class:"btn btn-primary" do %>
              <i class="fas fa-search fa-sm"></i>
            <% end %>
          </div>


action_name = retorna qual a action do momento


params[:bond][:attach_ativo_attributes] = retorna as coisas


JQUERY SOMA DATA FINAL

campo data compra: $('#acquisition_acquisition_date')[0].value
campo de meses: $('#acquisition_warranty_period')[0].value
campo data final: $('#acquisition_warranty_ends')[0].value



@bond.call_number.last.number
@bond.attach_ativo
@bond.attach_ativo.last.ativo.tombo
@bond.attach_ativo.last.description
@bond.subarea.area.description
@bond.subarea.description

CRIA UM MODAL PARA INFORMAR O CPF

<div class="modal fade" id="cpf_modal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="cpf_modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cpf_modalLabel">Informe o CPF</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form>
          <div class="form-group">
            <input type="text" class="form-control" id="cpf">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" id="btn-termos" class="btn btn-success">Prossegir</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
      </div>
    </div>
 
 DATA: .strftime('%A, %d de %B de %Y ás %H:%M')   
    
  def show_ativo_status(attach_ativo)
    status_ativo = AttachAtivo.find_by_id(attach_ativo)
    attach_ativo ? status_ativo.status : "-"
  end

  def description_active(id)
    active = Ativo.find(id)
    description = [active.type, active.brand, active.model].join(" ")
  end
  </div>
</div>

